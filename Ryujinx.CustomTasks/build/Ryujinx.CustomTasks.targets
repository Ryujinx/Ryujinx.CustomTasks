<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <!-- Task: GenerateArrays -->

    <!-- Assign default values -->
    <PropertyGroup>
        <ArrayScanSolution Condition="'$(ArrayScanSolution)' == ''">false</ArrayScanSolution>
    </PropertyGroup>

    <ItemGroup>
        <ArrayInputFiles Condition="'$(ArrayScanSolution)' == 'false'" Include="$(MSBuildProjectDirectory)\**\*.cs" />
        <ArrayInputFiles Condition="'$(ArrayScanSolution)' == 'true'" Include="$(SolutionDir)\**\*.cs" />
    </ItemGroup>

    <!--A target that generates code, which is executed before the compilation-->
    <!-- TODO: Make "Outputs" more generic -->
    <Target Name="BeforeCompile" Inputs="@(ArrayInputFiles)" Outputs="$(ArrayOutputPath)\Arrays.g.cs;$(ArrayOutputPath)\IArray.g.cs">
        <!--Calling our custom task -->
        <GenerateArrays ArrayNamespace="$(ArrayNamespace)" ScanSolution="$(ArrayScanSolution)" OutputPath="$(ArrayOutputPath)"
                        SolutionDir="$(SolutionDir)" ProjectDir="$(MSBuildProjectDirectory)" NugetPackagePath="$(NuGetPackageRoot)"
                        TargetFramework="$(TargetFramework)">
            <!--Our generated files are included to be compiled-->
            <Output TaskParameter="OutputFiles" ItemName="Compile" />
        </GenerateArrays>
    </Target>

    <!--The generated files are deleted after a general clean. It will force the regeneration on rebuild -->
    <Target Name="AfterClean">
        <Delete Files="$(ArrayOutputPath)\Arrays.g.cs;$(ArrayOutputPath)\IArray.g.cs" />
    </Target>
</Project>
